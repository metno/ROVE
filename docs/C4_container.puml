@startuml Confident_Container
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_LEFT_RIGHT()

title
  Confident Container diagram
end title 

Person(user, "User", "A user at MET that may want to run extra QC or integrate a new QC tests and see the outcome")
System(new_obs_system, "Met operative automated", "Automated system that triggers the QC that needs to run automatically")
System_Ext(kafka, "Data ingress", "New observations come to MET, currently uses Kafka")

System_Ext(frost, "Frost", "Rest API")
SystemDb_Ext(oda, "ODA", "Observation database.")
SystemDb_Ext(lustre, "Lustre", "File system")
SystemDb_Ext(datasources, "Other data sources", "Other data sources needed for QC")

System_Boundary(Confident, "QC system for observations") {
  Container(rove, "ROVE", "Rust", "QC system, knows the dependencies between QC tests and can schedule the dependencies as needed. Contains QC libraries and connectors to data sources, and can horizontally scale to run tests in parallel")
}

Rel_U(new_obs_system, kafka, "opens stream, and receives notifications of arrival of new data", "sarama")

Rel(new_obs_system, oda, "writes QC flags to", "GRPC")

Rel(user, rove, "creates manual API calls, and receives QC flags from", "HTTPS")
Rel(new_obs_system, rove, "creates automated API calls to, and receives QC flags from", "GRPC")
Rel(rove, oda, "gets data needed for QC", "GRPC")
Rel(rove, lustre, "gets data needed for QC")
Rel(rove, datasources, "gets data needed for QC")
Rel(user, frost, "gets output of QC tests, or more general data quality information from", "REST API")
@enduml